{"version":3,"file":"index.js","sources":["source/indexed.js","source/extended.js"],"sourcesContent":["import { getClass } from '@actualwave/get-class';\nimport { getTypeValue } from '@actualwave/primitive-type-checker';\nimport { getTypeCheckerData } from '@actualwave/type-checkers';\n\nconst indexBasedClasses = new Set([Array]);\n\nexport const INDEX = '(Index)';\n\nexport const isIndexAccessTarget = (target) => !!target && indexBasedClasses.has(getClass(target));\n\nexport const registerIndexBasedClass = (constructor) => {\n  indexBasedClasses.add(constructor);\n};\n\nexport const setIndexValueType = (target, type) => {\n  const storage = getTypeCheckerData(target);\n\n  if (storage && type) {\n    storage.set(INDEX, new Set([type]));\n  }\n};\n\nexport const setIndexValueTypeBy = (target, value) => {\n  setIndexValueType(target, getTypeValue(value));\n};\n","import { createTypesStorage } from '@actualwave/type-checker-levels-storage';\nimport isFunction from '@actualwave/is-function';\n\nimport PrimitiveTypeChecker, {\n  GET_PROPERTY,\n  SET_PROPERTY,\n} from '@actualwave/primitive-type-checker';\n\nimport { INDEX, isIndexAccessTarget } from './indexed';\n\nconst isOptionalFunction = (value, name) => {\n  if (value !== undefined && !isFunction(value)) {\n    throw new Error(`\"${name}\" must be a callable object, i.e. function.`);\n  }\n};\n\nclass ExtendedTypeChecker extends PrimitiveTypeChecker {\n  constructor({\n    collectTypesOnInit = true,\n    enableGetChecker = true,\n    areArrayElementsOfSameType = true,\n    customTypeResolver = undefined,\n    customTypeComparator = undefined,\n  } = {}) {\n    super(collectTypesOnInit, enableGetChecker);\n\n    this.areArrayElementsOfSameType = areArrayElementsOfSameType;\n\n    this.customTypeResolver = customTypeResolver;\n    isOptionalFunction(this.customTypeResolver, 'customTypeResolver');\n\n    this.customTypeComparator = customTypeComparator;\n    isOptionalFunction(this.customTypeComparator, 'customTypeComparator');\n  }\n\n  getTypeValue(value) {\n    if (this.customTypeResolver) {\n      return this.customTypeResolver(value);\n    }\n\n    return super.getTypeValue(value);\n  }\n\n  isTypeCompatible(storage, key, type, target) {\n    if (this.customTypeComparator) {\n      return this.customTypeComparator(storage, key, type, target);\n    }\n\n    return super.isTypeCompatible(storage, key, type, target);\n  }\n\n  findIndexedType(target) {\n    const { length } = target;\n\n    for (let index = 0; index < length; index += 1) {\n      const type = this.getTypeValue(target[index]);\n\n      if (type) {\n        return type;\n      }\n    }\n\n    return '';\n  }\n\n  init(target, cachedStorage = null) {\n    if (\n      !cachedStorage &&\n      this.collectTypesOnInit &&\n      this.areArrayElementsOfSameType &&\n      isIndexAccessTarget(target)\n    ) {\n      const storage = createTypesStorage();\n      const type = this.findIndexedType(target);\n\n      if (type) {\n        storage.add(INDEX, type);\n        return storage;\n      }\n    }\n\n    return super.init(target, cachedStorage);\n  }\n\n  getProperty(target, names, value, storage) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.getIndexProperty(target, names, value, storage);\n    }\n\n    return super.getProperty(target, names, value, storage);\n  }\n\n  getIndexProperty(target, names, value, storage) {\n    const nextNames = names.clone();\n\n    nextNames.appendCustomValue(INDEX);\n\n    return this.checkValueType(GET_PROPERTY, storage, target, nextNames, this.getTypeValue(value));\n  }\n\n  setProperty(target, names, newValue, storage) {\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\n      return this.setIndexProperty(target, names, newValue, storage);\n    }\n\n    return super.setProperty(target, names, newValue, storage);\n  }\n\n  setIndexProperty(target, names, newValue, storage) {\n    const nextNames = names.clone();\n\n    nextNames.appendCustomValue(INDEX);\n\n    return this.checkValueType(SET_PROPERTY, storage, target, nextNames, this.getTypeValue(newValue));\n  }\n}\n\nexport const createExtendedTypeChecker = (options) => new ExtendedTypeChecker(options);\n\nexport default ExtendedTypeChecker;\n"],"names":["indexBasedClasses","Set","Array","INDEX","isIndexAccessTarget","target","has","getClass","registerIndexBasedClass","constructor","add","setIndexValueType","type","storage","getTypeCheckerData","set","setIndexValueTypeBy","value","getTypeValue","isOptionalFunction","name","undefined","isFunction","Error","ExtendedTypeChecker","PrimitiveTypeChecker","collectTypesOnInit","enableGetChecker","areArrayElementsOfSameType","customTypeResolver","customTypeComparator","isTypeCompatible","key","findIndexedType","length","index","init","cachedStorage","createTypesStorage","getProperty","names","getIndexProperty","nextNames","clone","appendCustomValue","checkValueType","GET_PROPERTY","setProperty","newValue","setIndexProperty","SET_PROPERTY","createExtendedTypeChecker","options"],"mappings":"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"}