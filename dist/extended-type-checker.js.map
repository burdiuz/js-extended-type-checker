{"version":3,"file":"extended-type-checker.js","sources":["../node_modules/@actualwave/type-checker-simple-reporting/index.js","../node_modules/@actualwave/has-own/has-own.js","../node_modules/@actualwave/map-of-sets/index.js","../node_modules/@actualwave/type-checker-levels-storage/index.js","../node_modules/@actualwave/primitive-type-checker/index.js","../node_modules/@actualwave/get-class/get-class.js","../node_modules/@actualwave/closure-value/closure-value.js","../node_modules/@actualwave/path-sequence-to-string/index.js","../node_modules/@actualwave/is-function/is-function.js","../node_modules/@actualwave/with-proxy/with-proxy.js","../node_modules/@actualwave/type-checkers/index.js","../source/indexed.js","../source/extended.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint-disable import/prefer-default-export */\n\nconst constructErrorString = (action, name, required, received) => `${action}Error on \"${name}\" instead of \"${required}\" received \"${received}\"`;\n\n/* eslint-disable no-console */\n\nconst ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) => console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nconst ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) => console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\n/* eslint-disable import/prefer-default-export */\n\nconst ThrowErrorReporter = (action, name, requiredTypeString, receivedTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, receivedTypeString));\n};\n\nexports.ConsoleErrorReporter = ConsoleErrorReporter;\nexports.ConsoleWarnReporter = ConsoleWarnReporter;\nexports.ThrowErrorReporter = ThrowErrorReporter;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass MapOfSets {\n  constructor() {\n    this.storage = new Map();\n  }\n  /**\r\n   * Check if key exists\r\n   * @param {*} key\r\n   */\n\n\n  has(key) {\n    const values = this.storage.get(key);\n    return values && values.size;\n  }\n  /**\r\n   * Check if value exists for key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  hasValue(key, value) {\n    const values = this.storage.get(key);\n    return values && values.has(value);\n  }\n  /**\r\n   * Get Set of values for key\r\n   * @param {*} key\r\n   */\n\n\n  get(key) {\n    return this.storage.get(key);\n  }\n  /**\r\n   * List values for key, returns empty array if no key nor values stored\r\n   * @param {*} key\r\n   */\n\n\n  list(key) {\n    const values = this.storage.get(key);\n    return values ? Array.from(values) : [];\n  }\n  /**\r\n   * Call callback for each value of each key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {Function} callback\r\n   */\n\n\n  forEach(callback) {\n    this.storage.forEach((values, key) => values.forEach(value => callback(value, key, this)));\n  }\n  /**\r\n   * Call callback function for each value of specified key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {*} key\r\n   * @param {Function} callback\r\n   */\n\n\n  eachValue(key, callback) {\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.forEach(value => callback(value, key, this));\n    }\n  }\n  /**\r\n   * Add to new value to key.\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  add(key, value) {\n    if (!value) return;\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.add(value);\n    } else {\n      this.storage.set(key, new Set([value]));\n    }\n  }\n  /**\r\n   * Replace all values for key\r\n   * @param {*} key\r\n   * @param {Set} types\r\n   */\n\n\n  set(key, values) {\n    if (!values || values.size === 0) {\n      this.remove(key);\n      return;\n    }\n\n    this.storage.set(key, new Set(values));\n  }\n  /**\r\n   * Remove all values for key\r\n   * @param {*} key\r\n   */\n\n\n  remove(key) {\n    this.storage.delete(key);\n  }\n  /**\r\n   * Remove single value from key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  removeValue(key, value) {\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.delete(value);\n\n      if (!values.size) {\n        this.remove(key);\n      }\n    }\n  }\n  /**\r\n   * Clone all key-value stores\r\n   */\n\n\n  clone() {\n    const target = new MapOfSets();\n    this.storage.forEach((values, key) => target.set(key, new Set(values)));\n    return target;\n  }\n\n}\nconst createMapOfSets = () => new MapOfSets();\n\nexports.MapOfSets = MapOfSets;\nexports.createMapOfSets = createMapOfSets;\nexports.default = MapOfSets;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\nvar MapOfSets = _interopDefault(require('@actualwave/map-of-sets'));\n\n/**\n * Do not check or report type inconsistency\n */\nconst REPORT_NEVER = 'never';\n/**\n * Report type inconsistency once, i.e. record all types and report new\n */\nconst REPORT_ONCE = 'once';\n/**\n * Report whenever type is inconsistent with initial\n */\nconst REPORT_ALL = 'all';\n\nconst REPORT_KEY = Symbol('type-checkers:report-level');\nconst PROPERTY_REPORT_KEY = Symbol('type-checkers:property-report-level');\n\nlet globalReportingLevel = REPORT_ALL;\n\nconst validateReportingLevel = level => {\n  switch (level) {\n    case REPORT_NEVER:\n    case REPORT_ONCE:\n      return level;\n    default:\n      return REPORT_ALL;\n  }\n};\n\nconst setGlobalReportingLevel = level => {\n  globalReportingLevel = validateReportingLevel(level);\n};\n\nconst getGlobalReportingLevel = () => globalReportingLevel;\n\nconst setTargetGeneralReportingLevel = (target, level) => {\n  if (level) {\n    target[REPORT_KEY] = validateReportingLevel(level);\n  } else {\n    delete target[REPORT_KEY];\n  }\n};\n\nconst setTargetPropertyReportingLevel = (target, perPropertyLevels) => {\n  if (!perPropertyLevels) {\n    delete target[PROPERTY_REPORT_KEY];\n    return;\n  }\n\n  target[PROPERTY_REPORT_KEY] = Object.keys(perPropertyLevels).reduce((levels, prop) => {\n    levels[prop] = validateReportingLevel(perPropertyLevels[prop]);\n    return levels;\n  }, {});\n};\n\nconst setReportingLevel = (target, generalLevel, perPropertyLevels) => {\n  setTargetGeneralReportingLevel(target, generalLevel);\n  setTargetPropertyReportingLevel(target, perPropertyLevels);\n};\n\nconst getTargetReportingLevel = (target, key) => {\n  if (hasOwn(target[PROPERTY_REPORT_KEY], key)) {\n    return target[PROPERTY_REPORT_KEY][key];\n  }\n\n  return target[REPORT_KEY];\n};\n\nconst getReportingLevel = (target, key) => {\n  let level = getTargetReportingLevel(target, key);\n\n  if (!level) {\n    level = getTargetReportingLevel(target.constructor, key);\n  }\n\n  return level || getGlobalReportingLevel();\n};\n\n/**\n *\n * @param {any} key\n * @param {Set} target\n * @param {Set} source\n */\nconst defaultMergeStrategy = (key, target, source) => {\n  source.forEach(type => {\n    if (!target.has(type)) {\n      target.add(type);\n    }\n  });\n\n  return target;\n};\n\nclass TypeInfoStorage extends MapOfSets {\n  /**\n   * Add to type information for specified key.\n   * @param {*} key\n   * @param {*} type\n   * @param {Number} level\n   */\n  add(key, type, level) {\n    if (!type) return;\n\n    switch (level) {\n      case REPORT_NEVER:\n        this.remove(key);\n        break;\n      case REPORT_ONCE:\n        super.add(key, type);\n        break;\n      case REPORT_ALL:\n      default:\n        {\n          const types = this.storage.get(key);\n\n          if (!types || !types.size) {\n            this.storage.set(key, new Set([type]));\n          }\n        }\n        break;\n    }\n  }\n\n  addFor(key, type, target) {\n    this.add(key, type, getReportingLevel(target, key));\n  }\n\n  /**\n   * Replace types information for specific key\n   * @param {*} key\n   * @param {Set} types\n   * @param {Number} level\n   */\n  set(key, types, level) {\n    if (!types || types.size === 0 || level === REPORT_NEVER) {\n      this.remove(key);\n      return;\n    }\n\n    super.set(key, types);\n  }\n\n  /**\n   *\n   * @param {*} key\n   * @param {Set} types\n   * @param {Object} target\n   */\n  setFor(key, types, target) {\n    return this.set(key, types, getReportingLevel(target, key));\n  }\n\n  clone() {\n    const target = new TypeInfoStorage();\n    this.storage.forEach((types, key) => target.set(key, new Set(types)));\n\n    return target;\n  }\n\n  /**\n   * Copy types from current storage to storage passed as first argument.\n   * @param {Map} storage\n   * @param {Object} [target]\n   * @param {Function} [mergeStrategy]\n   */\n  copyTo(storage, target, mergeStrategy = defaultMergeStrategy) {\n    this.storage.forEach((types, key) => {\n      const level = validateReportingLevel(target && getReportingLevel(target, key));\n\n      switch (level) {\n        case REPORT_ALL:\n        case REPORT_ONCE:\n          if (storage.has(key)) {\n            storage.set(key, mergeStrategy(key, storage.get(key), types, level), level);\n          } else {\n            storage.set(key, new Set(types));\n          }\n          break;\n        case REPORT_NEVER:\n        default:\n          break;\n      }\n    });\n\n    return storage;\n  }\n}\n\nconst createTypesStorage = () => new TypeInfoStorage();\n\nexports.REPORT_ALL = REPORT_ALL;\nexports.REPORT_NEVER = REPORT_NEVER;\nexports.REPORT_ONCE = REPORT_ONCE;\nexports.createTypesStorage = createTypesStorage;\nexports.defaultMergeStrategy = defaultMergeStrategy;\nexports.getGlobalReportingLevel = getGlobalReportingLevel;\nexports.setGlobalReportingLevel = setGlobalReportingLevel;\nexports.getReportingLevel = getReportingLevel;\nexports.setReportingLevel = setReportingLevel;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar typeCheckerSimpleReporting = require('@actualwave/type-checker-simple-reporting');\nvar typeCheckerLevelsStorage = require('@actualwave/type-checker-levels-storage');\n\nlet errorReporter = typeCheckerSimpleReporting.ConsoleErrorReporter;\nconst getErrorReporter = () => errorReporter;\nconst setErrorReporter = value => {\n  errorReporter = value;\n};\n\nconst MERGE = '(Merge)';\nconst GET_PROPERTY = '(GetProperty)';\nconst SET_PROPERTY = '(SetProperty)';\nconst ARGUMENTS = '(Arguments)';\nconst RETURN_VALUE = '(ReturnValue)';\nconst checkPrimitiveType = (action, storage, target, names, type) => {\n  if (!type) {\n    return true;\n  }\n\n  const {\n    lastName\n  } = names;\n  const missingType = storage.has(lastName) && !storage.hasValue(lastName, type);\n\n  if (missingType) {\n    const errorReporter = getErrorReporter();\n    errorReporter(action, names.toString(), storage.list(lastName).join(', '), type);\n  }\n\n  storage.addFor(lastName, type, target);\n  return !missingType;\n};\nconst getTypeValue = value => {\n  if (value === undefined) {\n    return '';\n  }\n\n  const type = typeof value;\n\n  if (type === 'object' && value instanceof Array) {\n    return 'array';\n  }\n\n  return type;\n};\n\n/* eslint-disable class-methods-use-this */\n\nclass PrimitiveTypeChecker {\n  constructor(collectTypesOnInit = true, enableGetChecker = true) {\n    this.collectTypesOnInit = collectTypesOnInit;\n    this.enableGetChecker = enableGetChecker;\n  }\n\n  init(target, cachedStorage = null) {\n    let storage;\n\n    if (cachedStorage) {\n      storage = cachedStorage;\n    } else if (this.collectTypesOnInit) {\n      storage = typeCheckerLevelsStorage.createTypesStorage();\n      Object.keys(target).forEach(key => storage.addFor(key, this.getTypeValue(target[key]), target));\n    }\n\n    return storage;\n  }\n\n  getTypeValue(value) {\n    return getTypeValue(value);\n  }\n\n  checkType(action, storage, target, names, type) {\n    return checkPrimitiveType(action, storage, target, names, type);\n  }\n  /**\n   * FIXME add function to @actualwave/type-checker-levels-storage to merge configs\n   * this function should accept storages and merge strategy callback which will\n   * receive type info and decide what should be merged and what not\n   */\n\n\n  mergeConfigs(storage, sourceStorage, names) {\n    const errorReporter = getErrorReporter();\n    sourceStorage.copyTo(storage, null, (key, target, source) => {\n      const targetFirstValue = target.values().next().value;\n      source.forEach(sourceType => {\n        if (!target.has(sourceType)) {\n          target.add(sourceType);\n\n          if (targetFirstValue) {\n            errorReporter(MERGE, names, targetFirstValue, sourceType);\n          }\n        }\n      });\n      return target;\n    });\n  }\n\n  getProperty(target, names, value, storage) {\n    if (!this.enableGetChecker) {\n      return true;\n    }\n\n    const type = this.getTypeValue(value);\n    return this.checkType(GET_PROPERTY, storage, target, names, type);\n  }\n\n  setProperty(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n    return this.checkType(SET_PROPERTY, storage, target, names, type);\n  }\n\n  arguments(target, names, args, storage) {\n    const {\n      length\n    } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeValue(args[index]);\n      const agrValid = this.checkType(ARGUMENTS, storage, target, names.clone(index), type);\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n    const callNames = names.clone();\n    callNames.appendCustomValue(RETURN_VALUE);\n    return this.checkType(RETURN_VALUE, storage, target, callNames, type);\n  }\n\n}\n\nconst createPrimitiveTypeChecker = (collectTypesOnInit = true, enableGetChecker = true) => new PrimitiveTypeChecker(collectTypesOnInit, enableGetChecker);\n\nexports.REPORT_ALL = typeCheckerLevelsStorage.REPORT_ALL;\nexports.REPORT_NEVER = typeCheckerLevelsStorage.REPORT_NEVER;\nexports.REPORT_ONCE = typeCheckerLevelsStorage.REPORT_ONCE;\nexports.getGlobalReportingLevel = typeCheckerLevelsStorage.getGlobalReportingLevel;\nexports.setGlobalReportingLevel = typeCheckerLevelsStorage.setGlobalReportingLevel;\nexports.getReportingLevel = typeCheckerLevelsStorage.getReportingLevel;\nexports.setReportingLevel = typeCheckerLevelsStorage.setReportingLevel;\nexports.MERGE = MERGE;\nexports.ARGUMENTS = ARGUMENTS;\nexports.GET_PROPERTY = GET_PROPERTY;\nexports.RETURN_VALUE = RETURN_VALUE;\nexports.SET_PROPERTY = SET_PROPERTY;\nexports.checkPrimitiveType = checkPrimitiveType;\nexports.getTypeValue = getTypeValue;\nexports.PrimitiveTypeChecker = PrimitiveTypeChecker;\nexports.createPrimitiveTypeChecker = createPrimitiveTypeChecker;\nexports.getErrorReporter = getErrorReporter;\nexports.setErrorReporter = setErrorReporter;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n  \n  const proto = Object.getPrototypeOf(target);\n  \n  if (typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n  \n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const match = String(getClass(value)).match(\n    /^(?:[^\\(\\{\\s]*)(?:class|function)\\s+([\\w\\d_$]+)(?:\\s*\\(|\\s*\\{|\\s+extends)/,\n  );\n\n  return match ? match[1] : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Wrap any value with AsIs() to pass it to string as is without ant wrapping\n * or dot prior to name.\n * @param {*} value\n */\nfunction AsIs(value) {\n  if (this instanceof AsIs) {\n    this.value = value;\n  } else {\n    return new AsIs(value);\n  }\n}\n\nfunction asIs() {\n  return this.value;\n}\n\nAsIs.prototype.toString = asIs;\nAsIs.prototype.valueOf = asIs;\nAsIs.prototype[Symbol.toPrimitive] = asIs;\n\n/**\n *\n * @param {String} str\n * @param {String|AsIs|Number} name\n */\nconst appendPathNameToString = (str, name) => {\n  const string = String(str) || '';\n\n  if (name instanceof AsIs) {\n    return `${string}${name}`;\n  }\n\n  if (typeof name === 'symbol') {\n    return `${string}[${String(name)}]`;\n  }\n\n  if (String(parseInt(name, 10)) === name) {\n    return `${string}[${name}]`;\n  }\n\n  if (/^[a-z_$][\\w\\d$_]*$/i.test(name)) {\n    return string ? `${string}.${name}` : name;\n  }\n\n  return `${string}[\"${name}\"]`;\n};\n\nclass PathSequence {\n  constructor(value) {\n    this.value = value ? String(value) : '';\n    this.lastName = undefined;\n  }\n\n  append(name) {\n    this.value = appendPathNameToString(this.value, name);\n    this.lastName = name;\n  }\n\n  appendCustomValue(customString) {\n    this.value = appendPathNameToString(this.value, AsIs(customString));\n    this.lastName = customString;\n  }\n\n  clone(nextName = undefined) {\n    const sequence = new PathSequence(this.value);\n\n    if (nextName === undefined) {\n      sequence.lastName = this.lastName;\n    } else {\n      sequence.append(nextName);\n    }\n\n    return sequence;\n  }\n\n  getLastName() {\n    return this.lastName;\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n}\n\n/**\n *\n * @returns {Array<String|Number|AsIs>}\n */\nconst createPathSequence = value => new PathSequence(value);\n\nexports.createPathSequence = createPathSequence;\nexports.default = PathSequence;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst isFunction = (target) => (typeof target === 'function');\n\nexports.isFunction = isFunction;\nexports.default = isFunction;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst { isFunction } = require('@actualwave/is-function');\n\nconst withProxy = (handlers) => {\n  /*\n   have problems with using rest operator here, when in node_modules without additional \n   configurations, so using old style code\n  */\n  const { apply, construct } = handlers;\n\n  delete handlers.apply;\n  delete handlers.construct;\n\n  const functionHandlers = { ...handlers, construct, apply };\n\n  return (target) => new Proxy(target, isFunction(target) ? functionHandlers : handlers);\n};\n\nexports.withProxy = withProxy;\nexports.default = withProxy;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar closureValue = require('@actualwave/closure-value');\nvar getClass = require('@actualwave/get-class');\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\nvar pathSequenceToString = require('@actualwave/path-sequence-to-string');\nvar isFunction = _interopDefault(require('@actualwave/is-function'));\nvar withProxy = _interopDefault(require('@actualwave/with-proxy'));\n\nconst {\n  get: getDefaultTypeChecker,\n  set: setDefaultTypeChecker\n} = closureValue.singleValueFactory();\n\nconst {\n  get: isEnabled,\n  set: setEnabled\n} = closureValue.singleValueFactory(true, value => !!value);\n\n/*\n When ignoring class, its instances will never be wrapped.\n*/\n\nconst constructors = new Set();\nconst addIgnoredClasses = (...classes) => {\n  classes.forEach(constructor => {\n    if (constructor && !constructors.has(constructor)) {\n      constructors.add(constructor);\n    }\n  });\n};\nconst removeIgnoredClasses = (...classes) => {\n  classes.forEach(constructor => constructors.delete(constructor));\n};\nconst isIgnoredClass = constructor => constructors.has(constructor);\nconst isValueOfIgnoredClass = value => constructors.has(getClass.getClass(value));\n/**\n * Number, String, Boolean and Symbol will not pass\n *\n *  typeof === 'object' || typeof === 'function'\n *\n * check, so not need to add them.\n */\n\naddIgnoredClasses(Map, Set, Date, Error);\n\nconst WRAP_FUNCTION_RETURN_VALUES = 'wrapFunctionReturnValues';\nconst WRAP_FUNCTION_ARGUMENTS = 'wrapFunctionArguments';\nconst WRAP_SET_PROPERTY_VALUES = 'wrapSetPropertyValues';\nconst WRAP_IGNORE_PROTOTYPE_METHODS = 'ignorePrototypeMethods';\nconst {\n  getDefault: getDefaultWrapConfig,\n  set: setWrapConfigValue,\n  get\n} = closureValue.valuesMapFactory([[WRAP_FUNCTION_RETURN_VALUES, true], [WRAP_FUNCTION_ARGUMENTS, false], [WRAP_SET_PROPERTY_VALUES, false], [WRAP_IGNORE_PROTOTYPE_METHODS, false]], (key, value) => !!value);\nconst getWrapConfigValue = (name, target) => {\n  let value;\n\n  if (target) {\n    value = target[name];\n  }\n\n  return value === undefined ? get(name) : value;\n};\n\n/*\n  I have had to apply custom key instead of name as is to\n  fix \"construtor\" issue. Since ordinary object has some\n  properties with values from start, these properties were\n  mustakenly returned as child info objects, for example, if\n  requesting hild info for \"constructor\" function of the target,\n  it returned class constructor which caused errors later,\n  when accesing info properties.\n\n  Converts Symbols and Numbers to String.\n\n  FIXME: Map might be fitting better.\n */\n\nconst getChildInfoKey = name => `@${String(name)}`;\n\nclass ChildrenCache {\n  constructor(children) {\n    if (children) {\n      this.cache = { ...children.cache\n      };\n    } else {\n      this.cache = {};\n    }\n  }\n\n  store(name, childInfo) {\n    const key = getChildInfoKey(name);\n\n    if (childInfo) {\n      this.cache[key] = childInfo;\n    } else {\n      delete this.cache[key];\n    }\n  }\n\n  get(name) {\n    return this.cache[getChildInfoKey(name)];\n  }\n\n  has(name) {\n    return !!this.cache[getChildInfoKey(name)];\n  }\n\n  remove(cache, name) {\n    return delete this.cache[getChildInfoKey(name)];\n  }\n\n  copy({\n    cache: sourceCache\n  }) {\n    Object.keys(sourceCache).forEach(key => {\n      if (hasOwn(this.cache, key)) {\n        this.cache[key].copy(sourceCache[key]);\n      } else {\n        this.cache[key] = sourceCache[key];\n      }\n    });\n    return this;\n  }\n\n}\n\nconst createChildrenCache = children => new ChildrenCache(children);\n\nconst INFO_KEY = Symbol('type-checkers::info');\nconst getTargetInfo = target => target ? target[INFO_KEY] : undefined;\nconst setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\nconst removeTargetInfo = target => delete target[INFO_KEY];\n\nclass TargetInfo {\n  constructor(checker, data = null, deep = true, names = pathSequenceToString.createPathSequence(), children = createChildrenCache()) {\n    this.checker = checker;\n    this.data = data;\n    this.deep = deep;\n    this.names = names;\n    this.children = children;\n  }\n\n  getChild(name) {\n    return this.children.get(name);\n  }\n\n  storeChildFrom(name, child) {\n    const info = getTargetInfo(child);\n\n    if (info) {\n      this.children.store(name, info);\n    }\n  }\n\n  createChildWithNames(names, value, data = null) {\n    const childInfo = new TargetInfo(this.checker, this.checker.init(value, data), this.deep, names);\n    this.children.store(names.lastName, childInfo);\n    return childInfo;\n  }\n\n  createChild(name, value, data = null) {\n    return this.createChildWithNames(this.names.clone(name), value, data);\n  }\n\n  copy({\n    deep,\n    checker,\n    children,\n    data,\n    names\n  }) {\n    if (this.checker === checker) {\n      this.deep = this.deep || deep;\n      this.children.copy(children);\n      this.data = checker.mergeConfigs(this.data, data, names);\n    } else {\n      console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n    }\n\n    return this;\n  }\n\n}\n\nconst createTargetInfo = (checker, data, deep, names, children) => new TargetInfo(checker, data, deep, names, children);\n\nconst getTypeChecker = target => {\n  if (target) {\n    const info = target[INFO_KEY];\n    return info && info.checker || undefined;\n  }\n\n  return undefined;\n};\nconst getTypeCheckerData = target => {\n  if (target) {\n    const info = target[INFO_KEY];\n    return info && info.data || undefined;\n  }\n\n  return undefined;\n};\n\nconst TARGET_KEY = Symbol('type-checkers::target');\nconst isSymbol = value => typeof value === 'symbol';\nconst isOfWrappableType = target => {\n  const type = typeof target;\n  return Boolean(target) && (type === 'function' || type === 'object') && !isValueOfIgnoredClass(target);\n};\nconst isWrapped = target => Boolean(target && target[TARGET_KEY]);\nconst isWrappable = target => isOfWrappableType(target) && !isWrapped(target);\nconst unwrap = target => target && target[TARGET_KEY] || target;\nconst setWrapConfigTo = (target, key, value) => {\n  if (!isWrapped(target)) {\n    return false;\n  }\n\n  const info = getTargetInfo(target);\n\n  switch (key) {\n    case WRAP_FUNCTION_RETURN_VALUES:\n    case WRAP_FUNCTION_ARGUMENTS:\n    case WRAP_SET_PROPERTY_VALUES:\n    case WRAP_IGNORE_PROTOTYPE_METHODS:\n      info[key] = !!value;\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst getTargetProperty = (wrapFn, target, names, value) => {\n  const info = getTargetInfo(target);\n  const {\n    deep\n  } = info;\n\n  if (deep || isFunction(value)) {\n    const {\n      lastName: property\n    } = names;\n    const childInfo = info.getChild(property);\n\n    if (childInfo) {\n      return wrapFn(value, childInfo);\n    }\n\n    return wrapFn(value, info.createChildWithNames(names, value));\n  }\n\n  return value;\n};\n/**\n * Skips prototype methods if they are ignored by config\n */\n\n\nconst isIgnoredProperty = (target, info, property, value) => {\n  if (isFunction(value) && !hasOwn(target, property) && getWrapConfigValue(WRAP_IGNORE_PROTOTYPE_METHODS, info)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getPropertyFactory = wrapFn => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    Also it allows \"unwrapping\" target.\n    */\n  }\n\n  if (property === TARGET_KEY) {\n    return target;\n  }\n\n  if (isSymbol(property)) {\n    return target[property];\n  }\n\n  const info = getTargetInfo(target);\n  const {\n    names,\n    data,\n    checker\n  } = info;\n  const nextNames = names.clone(property);\n\n  if (checker.getProperty) {\n    checker.getProperty(target, nextNames, value, data);\n  }\n\n  if (!isWrappable(value) || isIgnoredProperty(target, info, property, value)) {\n    return value;\n  }\n\n  return getTargetProperty(wrapFn, target, nextNames, value);\n};\n\nconst setNonTargetProperty = (target, property, value) => {\n  const {\n    names,\n    data,\n    checker\n  } = getTargetInfo(target);\n\n  if (checker.setProperty) {\n    checker.setProperty(target, names.clone(property), value, data);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setTargetProperty = (wrapFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const {\n    names,\n    checker,\n    data\n  } = info;\n  const childInfo = info.getChild(property);\n  const nextNames = childInfo ? childInfo.names : names.clone(property);\n\n  if (checker.setProperty) {\n    checker.setProperty(target, nextNames, value, data);\n  }\n\n  if (childInfo) {\n    value = wrapFn(value, childInfo);\n  } else {\n    value = wrapFn(value, info.createChildWithNames(nextNames, value));\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst updateTargetInfo = (target, value) => {\n  let info = getTargetInfo(target);\n\n  if (info && value && info !== value) {\n    info.copy(value);\n  } else {\n    info = value;\n  }\n\n  target[INFO_KEY] = info;\n  return true;\n};\n\nconst setPropertyFactory = wrapFn => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  if (property === INFO_KEY) {\n    return updateTargetInfo(target, value);\n  }\n\n  if (isSymbol(property)) {\n    return updateTargetInfo(target, value);\n  }\n\n  const info = getTargetInfo(target);\n\n  if (isWrappable(value) && getWrapConfigValue(WRAP_SET_PROPERTY_VALUES, info)) {\n    return setTargetProperty(wrapFn, target, property, value);\n  }\n\n  return setNonTargetProperty(target, property, value);\n};\n\nconst getTypeCheckedChild = (wrapFn, info, name, value) => {\n  if (!isWrappable(value)) {\n    return value;\n  }\n\n  const childInfo = info.getChild(name);\n\n  if (childInfo) {\n    return wrapFn(value, childInfo);\n  }\n\n  return wrapFn(value, info.createChild(name, value));\n};\nconst getTargetArguments = (wrapFn, info, argumentsList) => {\n  if (getWrapConfigValue(WRAP_FUNCTION_ARGUMENTS, info)) {\n    const {\n      length\n    } = argumentsList;\n\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = getTypeCheckedChild(wrapFn, info, String(index), argumentsList[index]);\n    }\n  }\n\n  return argumentsList;\n};\n\nconst applyFunctionFactory = wrapFn => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const {\n    names,\n    data,\n    checker\n  } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, names, argumentsList, data, thisArg);\n  }\n\n  if (getWrapConfigValue(WRAP_FUNCTION_ARGUMENTS, info)) {\n    argumentsList = getTargetArguments(wrapFn, info, argumentsList);\n  }\n\n  let result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, names, result, data, thisArg);\n  }\n\n  if (getWrapConfigValue(WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(wrapFn, info, 'returnValue', result);\n  }\n\n  return result;\n};\n\nconst constructFactory = wrapFn => (Target, argumentsList) => {\n  const info = getTargetInfo(Target);\n  const {\n    names,\n    data,\n    checker\n  } = info;\n\n  if (checker.arguments) {\n    checker.arguments(Target, names, argumentsList, data);\n  }\n\n  if (getWrapConfigValue(WRAP_FUNCTION_ARGUMENTS, info)) {\n    argumentsList = getTargetArguments(wrapFn, info, argumentsList);\n  }\n\n  let result = new Target(...argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(Target, names, result, data);\n  }\n\n  if (getWrapConfigValue(WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(wrapFn, info, 'returnValue', result);\n  }\n\n  return result;\n};\n\nconst deletePropertyFactory = () => (target, property) => {\n  if (property === INFO_KEY) {\n    return delete target[property];\n  }\n\n  if (property === TARGET_KEY) {\n    return false;\n  }\n\n  if (isSymbol(property)) {\n    return delete target[property];\n  }\n\n  const info = getTargetInfo(target);\n  const {\n    names,\n    data,\n    checker\n  } = info;\n  checker.deleteProperty(target, names.clone(property), data);\n  return delete target[property];\n};\n\n/* eslint-disable import/prefer-default-export */\nconst createInfoFromOptions = (target, {\n  checker = getDefaultTypeChecker(),\n  deep,\n  name,\n  data,\n  children,\n  info = null // exclusive option, if set other options being ignored\n\n} = {}) => info || createTargetInfo(checker, checker.init(target, data), deep, pathSequenceToString.createPathSequence(name), children);\n\nconst generateHandlers = (create, config = null) => ({\n  get: (!config || config.get) && getPropertyFactory(create),\n  set: (!config || config.set) && setPropertyFactory(create),\n  apply: (!config || config.apply) && applyFunctionFactory(create),\n  construct: (!config || config.construct) && constructFactory(create),\n  deleteProperty: (!config || config.deleteProperty) && deletePropertyFactory(create)\n});\n\nconst createWrapFactory = proxyConfig => {\n  let wrapInternal;\n\n  const assignInfoAndWrap = (target, info) => {\n    setTargetInfo(target, info);\n    return wrapInternal(target);\n  };\n\n  const handlers = generateHandlers(assignInfoAndWrap, proxyConfig);\n  wrapInternal = withProxy(handlers);\n  return assignInfoAndWrap;\n};\nconst wrap = (target, options = null, proxyConfig = null) => {\n  if (!isWrappable(target) || !isEnabled()) {\n    return target;\n  }\n\n  const wrapInternal = createWrapFactory(proxyConfig);\n  const info = createInfoFromOptions(target, options || undefined);\n  return wrapInternal(target, info);\n};\n\n/* eslint-disable import/prefer-default-export */\n\nconst deepInitializer = (target, info) => {\n  const {\n    names,\n    checker,\n    data\n  } = info;\n  Object.keys(target).forEach(name => {\n    const value = target[name];\n    const nextNames = names.clone(name);\n\n    if (checker.getProperty) {\n      checker.getProperty(target, nextNames, value, data);\n    }\n\n    if (isWrappable(value)) {\n      let childInfo = info.getChild(name);\n\n      if (!childInfo) {\n        childInfo = info.createChildWithNames(nextNames, value);\n      }\n\n      deepInitializer(value, childInfo);\n    }\n  });\n  setTargetInfo(target, info);\n  return info;\n};\n\nconst wrapDeep = (target, options, proxyConfig = null) => {\n  if (!isWrappable(target) || typeof target !== 'object' || !isEnabled()) {\n    return target;\n  }\n\n  const wrapInternal = createWrapFactory(proxyConfig);\n  const info = createInfoFromOptions(target, options);\n  deepInitializer(target, info);\n  return wrapInternal(target, info);\n};\n\nconst findWrapped = list => list.find(isWrapped);\n/**\n * Merge all objects and return new. If any of source objects were wrapped,\n * resulting object will be wrapped.\n * @param  {...any} sources\n */\n\n\nconst merge = (...sources) => {\n  const wrapped = findWrapped(sources);\n\n  if (!wrapped) {\n    return Object.assign({}, ...sources);\n  }\n\n  const info = getTargetInfo(wrapped);\n  return Object.assign(wrap({}, {\n    info\n  }), ...sources);\n};\n/**\n * Calls merge() and forces wrapped result.\n * @param {*} options\n * @param  {...Object} sources\n */\n\nmerge.options = (options, ...sources) => merge(wrap({}, options), ...sources);\n/**\n * Assign properties from source objects to target. If target or any of sources\n * were wrapped, resulting object will be wrapped.\n * @param {*} target\n * @param  {...any} sources\n */\n\n\nconst assign = (target, ...sources) => {\n  if (isWrapped(target)) {\n    return Object.assign(target, ...sources);\n  }\n\n  const wrapped = findWrapped(sources);\n\n  if (!wrapped) {\n    return Object.assign(target, ...sources);\n  }\n\n  const info = getTargetInfo(wrapped);\n  return Object.assign(wrap(target, {\n    info\n  }), ...sources);\n};\n/**\n * calls assign() and forces wrapped result.\n * @param {*} options\n * @param {Object} target\n * @param  {...Object} sources\n */\n\nassign.options = (options, target, ...sources) => assign(wrap(target, options), ...sources);\n\nexports.getDefaultTypeChecker = getDefaultTypeChecker;\nexports.setDefaultTypeChecker = setDefaultTypeChecker;\nexports.isEnabled = isEnabled;\nexports.setEnabled = setEnabled;\nexports.addIgnoredClasses = addIgnoredClasses;\nexports.isIgnoredClass = isIgnoredClass;\nexports.isValueOfIgnoredClass = isValueOfIgnoredClass;\nexports.removeIgnoredClasses = removeIgnoredClasses;\nexports.setWrapConfigValue = setWrapConfigValue;\nexports.getWrapConfigValue = getWrapConfigValue;\nexports.getTargetInfo = getTargetInfo;\nexports.getTypeChecker = getTypeChecker;\nexports.getTypeCheckerData = getTypeCheckerData;\nexports.removeTargetInfo = removeTargetInfo;\nexports.wrap = wrap;\nexports.wrapDeep = wrapDeep;\nexports.isWrappable = isWrappable;\nexports.isWrapped = isWrapped;\nexports.unwrap = unwrap;\nexports.setWrapConfigTo = setWrapConfigTo;\nexports.assign = assign;\nexports.merge = merge;\n//# sourceMappingURL=index.js.map\n","import { getClass } from '@actualwave/get-class';\nimport { getTypeValue } from '@actualwave/primitive-type-checker';\nimport { getTypeCheckerData } from '@actualwave/type-checkers';\n\nconst indexBasedClasses = new Set([Array]);\n\nexport const INDEX = '(Index)';\n\nexport const isIndexAccessTarget = (target) => !!target && indexBasedClasses.has(getClass(target));\n\nexport const registerIndexBasedClass = (constructor) => {\n  indexBasedClasses.add(constructor);\n};\n\nexport const setIndexValueType = (target, type) => {\n  const storage = getTypeCheckerData(target);\n\n  if (storage && type) {\n    storage.set(INDEX, new Set([type]));\n  }\n};\n\nexport const setIndexValueTypeBy = (target, value) => {\n  setIndexValueType(target, getTypeValue(value));\n};\n","import { createTypesStorage } from '@actualwave/type-checker-levels-storage';\r\nimport isFunction from '@actualwave/is-function';\r\n\r\nimport PrimitiveTypeChecker, {\r\n  GET_PROPERTY,\r\n  SET_PROPERTY,\r\n} from '@actualwave/primitive-type-checker';\r\n\r\nimport { INDEX, isIndexAccessTarget } from './indexed';\r\n\r\nclass ExtendedTypeChecker extends PrimitiveTypeChecker {\r\n  constructor({\r\n    collectTypesOnInit = true,\r\n    enableGetChecker = true,\r\n    areArrayElementsOfSameType = true,\r\n    customGetTypeValue = undefined,\r\n  } = {}) {\r\n    super(collectTypesOnInit, enableGetChecker);\r\n\r\n    this.areArrayElementsOfSameType = areArrayElementsOfSameType;\r\n    this.customGetTypeValue = customGetTypeValue;\r\n    if (this.customGetTypeValue !== undefined && !isFunction(this.customGetTypeValue)) {\r\n      throw new Error('\"customGetTypeValue\" must be a callable object, i.e. function.');\r\n    }\r\n  }\r\n\r\n  getTypeValue(value) {\r\n    if (this.customGetTypeValue) {\r\n      return this.customGetTypeValue(value);\r\n    }\r\n\r\n    return super.getTypeValue(value);\r\n  }\r\n\r\n  findIndexedType(target) {\r\n    const { length } = target;\r\n\r\n    for (let index = 0; index < length; index += 1) {\r\n      const type = this.getTypeValue(target[index]);\r\n\r\n      if (type) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  init(target, cachedStorage = null) {\r\n    if (\r\n      !cachedStorage &&\r\n      this.collectTypesOnInit &&\r\n      this.areArrayElementsOfSameType &&\r\n      isIndexAccessTarget(target)\r\n    ) {\r\n      const storage = createTypesStorage();\r\n      const type = this.findIndexedType(target);\r\n\r\n      if (type) {\r\n        storage.add(INDEX, type);\r\n        return storage;\r\n      }\r\n    }\r\n\r\n    return super.init(target, cachedStorage);\r\n  }\r\n\r\n  getProperty(target, names, value, storage) {\r\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\r\n      return this.getIndexProperty(target, names, value, storage);\r\n    }\r\n\r\n    return this.getNamedProperty(target, names, value, storage);\r\n  }\r\n\r\n  getIndexProperty(target, names, value, storage) {\r\n    return this.checkType(\r\n      GET_PROPERTY,\r\n      target,\r\n      names.clone(INDEX),\r\n      this.getTypeValue(value),\r\n      storage,\r\n    );\r\n  }\r\n\r\n  getNamedProperty(target, names, value, storage) {\r\n    return super.getProperty(target, names, value, storage);\r\n  }\r\n\r\n  setProperty(target, names, newValue, storage) {\r\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\r\n      return this.setIndexProperty(target, names, newValue, storage);\r\n    }\r\n\r\n    return this.setNamedProperty(target, names, newValue, storage);\r\n  }\r\n\r\n  setIndexProperty(target, names, newValue, storage) {\r\n    const type = this.getTypeValue(newValue);\r\n\r\n    return this.checkType(SET_PROPERTY, target, names, type, storage);\r\n  }\r\n\r\n  setNamedProperty = (target, names, newValue, storage) => {\r\n    return super.setProperty(target, names, newValue, storage);\r\n  };\r\n}\r\n\r\nexport const createExtendedTypeChecker = (\r\n  collectTypesOnInit = true,\r\n  enableGetChecker = true,\r\n  areArrayElementsOfSameType = true,\r\n) => new ExtendedTypeChecker(collectTypesOnInit, enableGetChecker, areArrayElementsOfSameType);\r\n\r\nexport default ExtendedTypeChecker;\r\n"],"names":["require$$0","require$$1","require$$2","getClass","indexBasedClasses","Set","Array","INDEX","isIndexAccessTarget","target","has","registerIndexBasedClass","constructor","add","setIndexValueType","type","storage","getTypeCheckerData","set","setIndexValueTypeBy","value","getTypeValue","ExtendedTypeChecker","PrimitiveTypeChecker","collectTypesOnInit","enableGetChecker","areArrayElementsOfSameType","customGetTypeValue","undefined","setNamedProperty","names","newValue","setProperty","isFunction","Error","findIndexedType","length","index","init","cachedStorage","createTypesStorage","getProperty","getIndexProperty","getNamedProperty","checkType","GET_PROPERTY","clone","setIndexProperty","SET_PROPERTY","createExtendedTypeChecker"],"mappings":"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"}