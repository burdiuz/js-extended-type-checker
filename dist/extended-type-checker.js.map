{"version":3,"file":"extended-type-checker.js","sources":["../node_modules/@actualwave/type-checker-simple-reporting/index.js","../node_modules/@actualwave/has-own/has-own.js","../node_modules/@actualwave/map-of-sets/index.js","../node_modules/@actualwave/type-checker-levels-storage/index.js","../node_modules/@actualwave/primitive-type-checker/index.js","../node_modules/@actualwave/get-class/get-class.js","../source/indexed.js","../node_modules/@actualwave/is-function/is-function.js","../source/extended.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint-disable import/prefer-default-export */\n\nconst constructErrorString = (action, name, required, received) => `${action}Error on \"${name}\" instead of \"${required}\" received \"${received}\"`;\n\n/* eslint-disable no-console */\n\nconst ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) => console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nconst ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) => console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\n/* eslint-disable import/prefer-default-export */\n\nconst ThrowErrorReporter = (action, name, requiredTypeString, receivedTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, receivedTypeString));\n};\n\nexports.ConsoleErrorReporter = ConsoleErrorReporter;\nexports.ConsoleWarnReporter = ConsoleWarnReporter;\nexports.ThrowErrorReporter = ThrowErrorReporter;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass MapOfSets {\n  constructor() {\n    this.storage = new Map();\n  }\n  /**\r\n   * Check if key exists\r\n   * @param {*} key\r\n   */\n\n\n  has(key) {\n    const values = this.storage.get(key);\n    return values && values.size;\n  }\n  /**\r\n   * Check if value exists for key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  hasValue(key, value) {\n    const values = this.storage.get(key);\n    return values && values.has(value);\n  }\n  /**\r\n   * Get Set of values for key\r\n   * @param {*} key\r\n   */\n\n\n  get(key) {\n    return this.storage.get(key);\n  }\n  /**\r\n   * List values for key, returns empty array if no key nor values stored\r\n   * @param {*} key\r\n   */\n\n\n  list(key) {\n    const values = this.storage.get(key);\n    return values ? Array.from(values) : [];\n  }\n  /**\r\n   * Call callback for each value of each key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {Function} callback\r\n   */\n\n\n  forEach(callback) {\n    this.storage.forEach((values, key) => values.forEach(value => callback(value, key, this)));\n  }\n  /**\r\n   * Call callback function for each value of specified key\r\n   *  callback (value:*, key:*, storage:*):void\r\n   * @param {*} key\r\n   * @param {Function} callback\r\n   */\n\n\n  eachValue(key, callback) {\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.forEach(value => callback(value, key, this));\n    }\n  }\n  /**\r\n   * Add to new value to key.\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  add(key, value) {\n    if (!value) return;\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.add(value);\n    } else {\n      this.storage.set(key, new Set([value]));\n    }\n  }\n  /**\r\n   * Replace all values for key\r\n   * @param {*} key\r\n   * @param {Set} types\r\n   */\n\n\n  set(key, values) {\n    if (!values || values.size === 0) {\n      this.remove(key);\n      return;\n    }\n\n    this.storage.set(key, new Set(values));\n  }\n  /**\r\n   * Remove all values for key\r\n   * @param {*} key\r\n   */\n\n\n  remove(key) {\n    this.storage.delete(key);\n  }\n  /**\r\n   * Remove single value from key\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\n\n\n  removeValue(key, value) {\n    const values = this.storage.get(key);\n\n    if (values) {\n      values.delete(value);\n\n      if (!values.size) {\n        this.remove(key);\n      }\n    }\n  }\n  /**\r\n   * Clone all key-value stores\r\n   */\n\n\n  clone() {\n    const target = new MapOfSets();\n    this.storage.forEach((values, key) => target.set(key, new Set(values)));\n    return target;\n  }\n\n}\nconst createMapOfSets = () => new MapOfSets();\n\nexports.MapOfSets = MapOfSets;\nexports.createMapOfSets = createMapOfSets;\nexports.default = MapOfSets;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\nvar MapOfSets = _interopDefault(require('@actualwave/map-of-sets'));\n\n/**\n * Do not check or report type inconsistency\n */\nconst REPORT_NEVER = 'never';\n/**\n * Report type inconsistency once, i.e. record all types and report new\n */\nconst REPORT_ONCE = 'once';\n/**\n * Report whenever type is inconsistent with initial\n */\nconst REPORT_ALL = 'all';\n\nconst REPORT_KEY = Symbol('type-checkers:report-level');\nconst PROPERTY_REPORT_KEY = Symbol('type-checkers:property-report-level');\n\nlet globalReportingLevel = REPORT_ALL;\n\nconst validateReportingLevel = level => {\n  switch (level) {\n    case REPORT_NEVER:\n    case REPORT_ONCE:\n      return level;\n    default:\n      return REPORT_ALL;\n  }\n};\n\nconst setGlobalReportingLevel = level => {\n  globalReportingLevel = validateReportingLevel(level);\n};\n\nconst getGlobalReportingLevel = () => globalReportingLevel;\n\nconst setTargetGeneralReportingLevel = (target, level) => {\n  if (level) {\n    target[REPORT_KEY] = validateReportingLevel(level);\n  } else {\n    delete target[REPORT_KEY];\n  }\n};\n\nconst setTargetPropertyReportingLevel = (target, perPropertyLevels) => {\n  if (!perPropertyLevels) {\n    delete target[PROPERTY_REPORT_KEY];\n    return;\n  }\n\n  target[PROPERTY_REPORT_KEY] = Object.keys(perPropertyLevels).reduce((levels, prop) => {\n    levels[prop] = validateReportingLevel(perPropertyLevels[prop]);\n    return levels;\n  }, {});\n};\n\nconst setReportingLevel = (target, generalLevel, perPropertyLevels) => {\n  setTargetGeneralReportingLevel(target, generalLevel);\n  setTargetPropertyReportingLevel(target, perPropertyLevels);\n};\n\nconst getTargetReportingLevel = (target, key) => {\n  if (hasOwn(target[PROPERTY_REPORT_KEY], key)) {\n    return target[PROPERTY_REPORT_KEY][key];\n  }\n\n  return target[REPORT_KEY];\n};\n\nconst getReportingLevel = (target, key) => {\n  let level = getTargetReportingLevel(target, key);\n\n  if (!level) {\n    level = getTargetReportingLevel(target.constructor, key);\n  }\n\n  return level || getGlobalReportingLevel();\n};\n\n/**\n *\n * @param {any} key\n * @param {Set} target\n * @param {Set} source\n */\nconst defaultMergeStrategy = (key, target, source) => {\n  source.forEach(type => {\n    if (!target.has(type)) {\n      target.add(type);\n    }\n  });\n\n  return target;\n};\n\nclass TypeInfoStorage extends MapOfSets {\n  /**\n   * Add to type information for specified key.\n   * @param {*} key\n   * @param {*} type\n   * @param {Number} level\n   */\n  add(key, type, level) {\n    if (!type) return;\n\n    switch (level) {\n      case REPORT_NEVER:\n        this.remove(key);\n        break;\n      case REPORT_ONCE:\n        super.add(key, type);\n        break;\n      case REPORT_ALL:\n      default:\n        {\n          const types = this.storage.get(key);\n\n          if (!types || !types.size) {\n            this.storage.set(key, new Set([type]));\n          }\n        }\n        break;\n    }\n  }\n\n  addFor(key, type, target) {\n    this.add(key, type, getReportingLevel(target, key));\n  }\n\n  /**\n   * Replace types information for specific key\n   * @param {*} key\n   * @param {Set} types\n   * @param {Number} level\n   */\n  set(key, types, level) {\n    if (!types || types.size === 0 || level === REPORT_NEVER) {\n      this.remove(key);\n      return;\n    }\n\n    super.set(key, types);\n  }\n\n  /**\n   *\n   * @param {*} key\n   * @param {Set} types\n   * @param {Object} target\n   */\n  setFor(key, types, target) {\n    return this.set(key, types, getReportingLevel(target, key));\n  }\n\n  clone() {\n    const target = new TypeInfoStorage();\n    this.storage.forEach((types, key) => target.set(key, new Set(types)));\n\n    return target;\n  }\n\n  /**\n   * Copy types from current storage to storage passed as first argument.\n   * @param {Map} storage\n   * @param {Object} [target]\n   * @param {Function} [mergeStrategy]\n   */\n  copyTo(storage, target, mergeStrategy = defaultMergeStrategy) {\n    this.storage.forEach((types, key) => {\n      const level = validateReportingLevel(target && getReportingLevel(target, key));\n\n      switch (level) {\n        case REPORT_ALL:\n        case REPORT_ONCE:\n          if (storage.has(key)) {\n            storage.set(key, mergeStrategy(key, storage.get(key), types, level), level);\n          } else {\n            storage.set(key, new Set(types));\n          }\n          break;\n        case REPORT_NEVER:\n        default:\n          break;\n      }\n    });\n\n    return storage;\n  }\n}\n\nconst createTypesStorage = () => new TypeInfoStorage();\n\nexports.REPORT_ALL = REPORT_ALL;\nexports.REPORT_NEVER = REPORT_NEVER;\nexports.REPORT_ONCE = REPORT_ONCE;\nexports.createTypesStorage = createTypesStorage;\nexports.defaultMergeStrategy = defaultMergeStrategy;\nexports.getGlobalReportingLevel = getGlobalReportingLevel;\nexports.setGlobalReportingLevel = setGlobalReportingLevel;\nexports.getReportingLevel = getReportingLevel;\nexports.setReportingLevel = setReportingLevel;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar typeCheckerSimpleReporting = require('@actualwave/type-checker-simple-reporting');\nvar typeCheckerLevelsStorage = require('@actualwave/type-checker-levels-storage');\n\nlet errorReporter = typeCheckerSimpleReporting.ConsoleErrorReporter;\nconst getErrorReporter = () => errorReporter;\nconst setErrorReporter = value => {\n  errorReporter = value;\n};\n\nconst MERGE = '(Merge)';\nconst GET_PROPERTY = '(GetProperty)';\nconst SET_PROPERTY = '(SetProperty)';\nconst ARGUMENTS = '(Arguments)';\nconst RETURN_VALUE = '(ReturnValue)';\nconst checkPrimitiveType = (storage, key, type) => {\n  return !storage.has(key) || storage.hasValue(key, type);\n};\nconst getTypeValue = value => {\n  if (value === undefined) {\n    return '';\n  }\n\n  const type = typeof value;\n\n  if (type === 'object' && value instanceof Array) {\n    return 'array';\n  }\n\n  return type;\n};\n\n/* eslint-disable class-methods-use-this */\n\nclass PrimitiveTypeChecker {\n  constructor(collectTypesOnInit = true, enableGetChecker = true) {\n    this.collectTypesOnInit = collectTypesOnInit;\n    this.enableGetChecker = enableGetChecker;\n  }\n\n  init(target, cachedStorage = null) {\n    let storage;\n\n    if (cachedStorage) {\n      storage = cachedStorage;\n    } else if (this.collectTypesOnInit) {\n      storage = typeCheckerLevelsStorage.createTypesStorage();\n      Object.keys(target).forEach(key => storage.addFor(key, this.getTypeValue(target[key]), target));\n    }\n\n    return storage;\n  }\n\n  getTypeValue(value) {\n    return getTypeValue(value);\n  }\n\n  checkValueType(action, storage, target, names, type) {\n    if (!type) {\n      return true;\n    }\n\n    const {\n      lastName\n    } = names;\n    const compatible = this.isTypeCompatible(storage, lastName, type, target);\n\n    if (!compatible) {\n      const errorReporter = getErrorReporter();\n      errorReporter(action, names.toString(), storage.list(lastName).join(', '), type);\n    }\n\n    storage.addFor(lastName, type, target);\n    return compatible;\n  }\n\n  isTypeCompatible(storage, key, type) {\n    return checkPrimitiveType(storage, key, type);\n  }\n  /**\n   * FIXME add function to @actualwave/type-checker-levels-storage to merge configs\n   * this function should accept storages and merge strategy callback which will\n   * receive type info and decide what should be merged and what not\n   */\n\n\n  mergeConfigs(storage, sourceStorage, names) {\n    const errorReporter = getErrorReporter();\n    sourceStorage.copyTo(storage, null, (key, target, source) => {\n      const targetFirstValue = target.values().next().value;\n      source.forEach(sourceType => {\n        if (!target.has(sourceType)) {\n          target.add(sourceType);\n\n          if (targetFirstValue) {\n            errorReporter(MERGE, names, targetFirstValue, sourceType);\n          }\n        }\n      });\n      return target;\n    });\n  }\n\n  getProperty(target, names, value, storage) {\n    if (!this.enableGetChecker) {\n      return true;\n    }\n\n    const type = this.getTypeValue(value);\n    return this.checkValueType(GET_PROPERTY, storage, target, names, type);\n  }\n\n  setProperty(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n    return this.checkValueType(SET_PROPERTY, storage, target, names, type);\n  }\n\n  arguments(target, names, args, storage) {\n    const {\n      length\n    } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeValue(args[index]);\n      const agrValid = this.checkValueType(ARGUMENTS, storage, target, names.clone(index), type);\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n    const callNames = names.clone();\n    callNames.appendCustomValue(RETURN_VALUE);\n    return this.checkValueType(RETURN_VALUE, storage, target, callNames, type);\n  }\n\n}\n\nconst createPrimitiveTypeChecker = (collectTypesOnInit = true, enableGetChecker = true) => new PrimitiveTypeChecker(collectTypesOnInit, enableGetChecker);\n\nexports.REPORT_ALL = typeCheckerLevelsStorage.REPORT_ALL;\nexports.REPORT_NEVER = typeCheckerLevelsStorage.REPORT_NEVER;\nexports.REPORT_ONCE = typeCheckerLevelsStorage.REPORT_ONCE;\nexports.getGlobalReportingLevel = typeCheckerLevelsStorage.getGlobalReportingLevel;\nexports.setGlobalReportingLevel = typeCheckerLevelsStorage.setGlobalReportingLevel;\nexports.getReportingLevel = typeCheckerLevelsStorage.getReportingLevel;\nexports.setReportingLevel = typeCheckerLevelsStorage.setReportingLevel;\nexports.MERGE = MERGE;\nexports.ARGUMENTS = ARGUMENTS;\nexports.GET_PROPERTY = GET_PROPERTY;\nexports.RETURN_VALUE = RETURN_VALUE;\nexports.SET_PROPERTY = SET_PROPERTY;\nexports.checkPrimitiveType = checkPrimitiveType;\nexports.getTypeValue = getTypeValue;\nexports.PrimitiveTypeChecker = PrimitiveTypeChecker;\nexports.createPrimitiveTypeChecker = createPrimitiveTypeChecker;\nexports.getErrorReporter = getErrorReporter;\nexports.setErrorReporter = setErrorReporter;\nexports.default = PrimitiveTypeChecker;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getProtoConstructor = (value) => {\n  const proto = Object.getPrototypeOf(value);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n}\n\nconst getClass = (value) => {\n  if(value === null || value === undefined) {\n    return undefined;\n  }\n\n  const constructor = value.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && value instanceof constructor\n  ) {\n    return value.constructor;\n  }\n\n  return getProtoConstructor(value);\n};\n\nconst getParentClass = (value) => getProtoConstructor(getClass(value));\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const def = getClass(value);\n\n  return def ? def.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","import { getClass } from '@actualwave/get-class';\nimport { getTypeValue } from '@actualwave/primitive-type-checker';\nimport { getTypeCheckerData } from '@actualwave/type-checkers';\n\nconst indexBasedClasses = new Set([Array]);\n\nexport const INDEX = '(Index)';\n\nexport const isIndexAccessTarget = (target) => !!target && indexBasedClasses.has(getClass(target));\n\nexport const registerIndexBasedClass = (constructor) => {\n  indexBasedClasses.add(constructor);\n};\n\nexport const setIndexValueType = (target, type) => {\n  const storage = getTypeCheckerData(target);\n\n  if (storage && type) {\n    storage.set(INDEX, new Set([type]));\n  }\n};\n\nexport const setIndexValueTypeBy = (target, value) => {\n  setIndexValueType(target, getTypeValue(value));\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst isFunction = (target) => (typeof target === 'function');\n\nexports.isFunction = isFunction;\nexports.default = isFunction;","import { createTypesStorage } from '@actualwave/type-checker-levels-storage';\r\nimport isFunction from '@actualwave/is-function';\r\n\r\nimport PrimitiveTypeChecker, {\r\n  GET_PROPERTY,\r\n  SET_PROPERTY,\r\n} from '@actualwave/primitive-type-checker';\r\n\r\nimport { INDEX, isIndexAccessTarget } from './indexed';\r\n\r\nconst isOptionalFunction = (value, name) => {\r\n  if (value !== undefined && !isFunction(value)) {\r\n    throw new Error(`\"${name}\" must be a callable object, i.e. function.`);\r\n  }\r\n};\r\n\r\nclass ExtendedTypeChecker extends PrimitiveTypeChecker {\r\n  constructor({\r\n    collectTypesOnInit = true,\r\n    enableGetChecker = true,\r\n    areArrayElementsOfSameType = true,\r\n    customTypeResolver = undefined,\r\n    customTypeComparator = undefined,\r\n  } = {}) {\r\n    super(collectTypesOnInit, enableGetChecker);\r\n\r\n    this.areArrayElementsOfSameType = areArrayElementsOfSameType;\r\n\r\n    this.customTypeResolver = customTypeResolver;\r\n    isOptionalFunction(this.customTypeResolver, 'customTypeResolver');\r\n\r\n    this.customTypeComparator = customTypeComparator;\r\n    isOptionalFunction(this.customTypeComparator, 'customTypeComparator');\r\n  }\r\n\r\n  getTypeValue(value) {\r\n    if (this.customTypeResolver) {\r\n      return this.customTypeResolver(value);\r\n    }\r\n\r\n    return super.getTypeValue(value);\r\n  }\r\n\r\n  isTypeCompatible(storage, key, type, target) {\r\n    if (this.customTypeComparator) {\r\n      return this.customTypeComparator((storage, key, type, target));\r\n    }\r\n\r\n    return super.isTypeCompatible(storage, key, type, target);\r\n  }\r\n\r\n  findIndexedType(target) {\r\n    const { length } = target;\r\n\r\n    for (let index = 0; index < length; index += 1) {\r\n      const type = this.getTypeValue(target[index]);\r\n\r\n      if (type) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  init(target, cachedStorage = null) {\r\n    if (\r\n      !cachedStorage &&\r\n      this.collectTypesOnInit &&\r\n      this.areArrayElementsOfSameType &&\r\n      isIndexAccessTarget(target)\r\n    ) {\r\n      const storage = createTypesStorage();\r\n      const type = this.findIndexedType(target);\r\n\r\n      if (type) {\r\n        storage.add(INDEX, type);\r\n        return storage;\r\n      }\r\n    }\r\n\r\n    return super.init(target, cachedStorage);\r\n  }\r\n\r\n  getProperty(target, names, value, storage) {\r\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\r\n      return this.getIndexProperty(target, names, value, storage);\r\n    }\r\n\r\n    return super.getProperty(target, names, value, storage);\r\n  }\r\n\r\n  getIndexProperty(target, names, value, storage) {\r\n    return this.checkType(GET_PROPERTY, storage, target, names, this.getTypeValue(value));\r\n  }\r\n\r\n  setProperty(target, names, newValue, storage) {\r\n    if (this.areArrayElementsOfSameType && isIndexAccessTarget(target)) {\r\n      return this.setIndexProperty(target, names, newValue, storage);\r\n    }\r\n\r\n    return super.setProperty(target, names, newValue, storage);\r\n  }\r\n\r\n  setIndexProperty(target, names, newValue, storage) {\r\n    return this.checkType(SET_PROPERTY, storage, target, names, this.getTypeValue(newValue));\r\n  }\r\n}\r\n\r\nexport const createExtendedTypeChecker = (options) => new ExtendedTypeChecker(options);\r\n\r\nexport default ExtendedTypeChecker;\r\n"],"names":["require$$0","require$$1","indexBasedClasses","Set","Array","INDEX","isIndexAccessTarget","target","has","getClass","registerIndexBasedClass","constructor","add","setIndexValueType","type","storage","getTypeCheckerData","set","setIndexValueTypeBy","value","getTypeValue","isOptionalFunction","name","undefined","isFunction","Error","ExtendedTypeChecker","PrimitiveTypeChecker","collectTypesOnInit","enableGetChecker","areArrayElementsOfSameType","customTypeResolver","customTypeComparator","isTypeCompatible","key","findIndexedType","length","index","init","cachedStorage","createTypesStorage","getProperty","names","getIndexProperty","checkType","GET_PROPERTY","setProperty","newValue","setIndexProperty","SET_PROPERTY","createExtendedTypeChecker","options"],"mappings":"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"}